---
- name: ensure /etc/mysql
  run_once: true
  file: path=/etc/mysql state=directory owner=root group=root mode=0755
  tags: [ 'percona', 'database' ]

# - name: ensure /etc/mysql/my.cnf ...
#   template: src=etc/mysql/my.cnf dest=/etc/mysql/my.cnf owner=root group=root mode=0644
#   notify:
#     - mysql restart

#- name: Install Percona GPG key
#  run_once: true
#  apt_key: data="{{ lookup('file', '../templates/percona-gpg-key') }}" state=present
#  tags: [ 'percona', 'database' ]

- name: Enable Percona repo
  run_once: true
  yum: name=https://www.percona.com/redir/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm state=present
  tags: [ 'percona', 'database' ]

- name: Install Percona server
  run_once: true
  yum: name=Percona-Server-server-56 state=present
  notify:
#    - update-rc mysql
    - mysql restart
  tags: [ 'percona', 'database' ]

- name: Install Percona client
  run_once: true
  yum: name=Percona-Server-client-56 state=present
  tags: [ 'percona', 'database' ]

- name: Create Mysql configuration file
  template: src=my.cnf dest=/etc/my.cnf
  notify:
  - restart mysql

- name: Start Mysql Service
  service: name=mysqld state=started enabled=true

- name: If .my.cnf exists
  stat: path=/root/.my.cnf
  register: stat_result

- name: update mysql root password for all root accounts
  mysql_user:
    check_implicit_admin=yes
    name=root
    host=localhost
    password={{ mysql_root_password }}
  when: not stat_result.stat.exists

- name: copy .my.cnf file with root password credentials
  template: src=.my.cnf dest=/root/.my.cnf owner=root mode=0600
  when: not stat_result.stat.exists

- name: ensure anonymous users are not in the database
  mysql_user: name='' host=$item state=absent
  with_items:
    - localhost
    - $inventory_hostname
  when: not stat_result.stat.exists

- name: remove the test database
  mysql_db: name=test state=absent
  when: not stat_result.stat.exists

